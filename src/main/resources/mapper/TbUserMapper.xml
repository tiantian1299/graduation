<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.office.wx.db.mapper.TbUserMapper">
    <resultMap id="BaseResultMap" type="com.example.office.wx.db.pojo.TbUser">
        <!--@mbg.generated-->
        <!--@Table tb_user-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="open_id" jdbcType="VARCHAR" property="openId"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="photo" jdbcType="VARCHAR" property="photo"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="OTHER" property="sex"/>
        <result column="tel" jdbcType="CHAR" property="tel"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="hiredate" jdbcType="DATE" property="hiredate"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
        <result column="root" jdbcType="BOOLEAN" property="root"/>
        <result column="dept_id" jdbcType="INTEGER" property="deptId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, open_id, nickname, photo, `name`, sex, tel, email, hiredate, `role`, root, dept_id,
        `status`, create_time
    </sql>
    <select id="haveRootUser" resultType="boolean">
        select if(count(*), true, false)
        from tb_user
        where root = 1;
    </select>
    <insert id="insert" parameterType="HashMap">
        INSERT INTO tb_user
        SET
        <if test="openId != null">
            open_id = #{openId},
        </if>
        <if test="nickname != null">
            nickname = #{nickname},
        </if>
        <if test="photo != null">
            photo = #{photo},
        </if>
        <if test="name != null">
            name = #{name},
        </if>
        <if test="sex != null">
            sex = #{sex},
        </if>
        <if test="tel != null">
            tel = #{tel},
        </if>
        <if test="email != null">
            email=#{email},
        </if>
        <if test="hiredate != null">
            hiredate = #{hiredate},
        </if>
        role = #{role},
        root = #{root},
        <if test="deptName != null">
            dept_id = ( SELECT id FROM tb_dept WHERE dept_name = #{deptName} ),
        </if>
        status = #{status},
        create_time = #{createTime}
    </insert>
    <!--根据openId查询员工的主键值-->
    <select id="searchIdByOpenId" parameterType="String" resultType="integer">
        select id
        from tb_user
        where open_id = #{openId}
          and status = 1
    </select>
    <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r on JSON_CONTAINS(u.role, cast(r.id AS CHAR))
                 JOIN tb_permission p on JSON_CONTAINS(r.permissions, cast(p.id AS CHAR))
        where u.id = #{userId}
          and u.status = 1
    </select>
    <select id="searchById" parameterType="int" resultType="com.example.office.wx.db.pojo.TbUser">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        where id = #{userId} and status = 1
    </select>

    <select id="queryUserHiredate" parameterType="int" resultType="string">
        select hiredate
        from tb_user
        where id = #{userId}
          and status = 1
    </select>

    <select id="searchUserCountInDept" parameterType="int" resultType="long">
        SELECT COUNT(*) AS count
        FROM tb_user
        WHERE dept_id=#{deptId} AND status = 1
    </select>

    <select id="searchUserGroupByDept" parameterType="String" resultType="HashMap">
        SELECT
        d.id AS deptId,
        d.dept_name AS deptName,
        u.id AS userId,
        u.name
        FROM tb_dept d JOIN tb_user u ON u.dept_id=d.id
        WHERE u.status=1
        <if test="keyword!=null">
            AND u.name LIKE '%${keyword}%'
        </if>
        ORDER BY d.id, u.id;
    </select>

    <insert id="insertUser" parameterType="com.example.office.wx.db.pojo.TbUser" keyProperty="id"
            useGeneratedKeys="true">
        INSERT INTO tb_user
        SET
        <if test="openId != null">
            open_id = #{openId},
        </if>
        <if test="nickname != null">
            nickname = #{nickname},
        </if>
        <if test="photo != null">
            photo = #{photo},
        </if>
        <if test="name != null">
            name = #{name},
        </if>
        <if test="sex != null">
            sex = #{sex},
        </if>
        <if test="tel != null">
            tel = #{tel},
        </if>
        <if test="email != null">
            email=#{email},
        </if>
        <if test="hiredate != null">
            hiredate = #{hiredate},
        </if>
        role = #{role},
        root = #{root},
        <if test="deptId != null">
            dept_id = #{deptId},
        </if>
        status = #{status},
        create_time = #{createTime}
    </insert>
    <update id="activeUserAccount" parameterType="HashMap">
        UPDATE tb_user
        SET open_id=#{openId},
            nickname=#{nickname},
            photo=#{photo}
        WHERE id = #{userId}
          AND status = 1
    </update>
    <select id="searchUserSummary" parameterType="int" resultType="HashMap">
        SELECT u.name, u.photo, d.dept_name AS deptName
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>
    <update id="updateUserInfo" parameterType="com.example.office.wx.db.pojo.TbUser">
        UPDATE tb_user
        SET name    = #{name},
            sex     = #{sex},
            dept_id =#{deptId},
            tel=#{tel},
            email=#{email},
            hiredate=#{hiredate},
            role=#{role},
            status  = #{status},
            root=#{root}
        WHERE id = #{id}
    </update>

    <select id="searchUserInfo" parameterType="int" resultType="HashMap">
        SELECT u.open_id                                        AS openId,
               u.nickname,
               u.name,
               u.photo,
               u.sex,
               u.tel,
               u.email,
               d.dept_name                                      AS dept,
               u.hiredate,
               CASE u.status
                   WHEN 1 THEN "在职"
                   WHEN 2 THEN "离职"
                   END                                          AS status,
               (SELECT GROUP_CONCAT(role_name separator "，")
                FROM tb_role
                WHERE JSON_CONTAINS(u.role, CONVERT(id, CHAR))) AS roles
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>
    <delete id="deleteUserById" parameterType="int">
        DELETE
        FROM tb_user
        WHERE id = #{id}
    </delete>

    <select id="searchUserContactList" resultType="HashMap">
        SELECT u.name,
               IFNULL(d.dept_name, '') AS dept,
               IFNULL(u.tel, '')       AS tel
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.status = 1
        ORDER BY CONVERT(u.name using gbk) ASC;
    </select>
    <select id="searchMembersInfo" resultType="hashmap" parameterType="list">
        select u.name,u.photo,u.id
        from tb_user u
        where status = 1
        and
        u.id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <select id="seacherUserRole" parameterType="int" resultType="string">
        select tb_role.role_name
        from tb_user
                 left join tb_role on JSON_CONTAINS(tb_user.role, (CAST(tb_role.id AS CHAR)))
        where tb_user.id =  #{id}
    </select>
    <select id="searchDeptManger" parameterType="int" resultType="int">
        select u2.id
        from tb_user u1
                 left join tb_user u2 on u1.dept_id = u2.dept_id
        where JSON_CONTAINS(u2.role,'1') and u1.id = #{id}
    </select>
</mapper>